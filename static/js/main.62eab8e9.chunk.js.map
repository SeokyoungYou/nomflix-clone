{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Components/Movies/MovieBanner.tsx","atom.ts","Components/Movies/MovieSlider.tsx","Components/Movies/SingleMovie.tsx","Routes/Home.tsx","Components/Tvs/TvSlider.tsx","Routes/Search.tsx","Components/Tvs/SingleTv.tsx","Components/Tvs/TvBanner.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","to","whileHover","xmlns","width","height","viewBox","path","d","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getLatestMovie","getTopRatedMovie","getUpcomingMovie","getPopularTv","getLatestTv","getTopRatedTv","getAiringTodayTv","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","MovieBanner","isLoading","results","backdrop_path","title","overview","sliderNumAtom","atom","key","default","Slider","SliderTitle","SliderHeader","SliderBtn","button","Row","Box","BoxImg","Info","black","Overlay","BigMovie","BigCover","BigInfoBox","BigInfoVote","BigTitle","h3","BigOverview","rowVariants","hidden","back","window","outerWidth","visible","exit","BoxVariants","scale","hover","y","delay","duration","InfoVariants","opacity","MovieSlider","slidertitle","sliderString","bigMovieMatch","setBack","index","setIndex","leaving","setLeaving","useRecoilState","sliderNum","setSliderNum","toggleLeaving","clickedMoive","params","movieId","find","movie","String","totalMovies","length","maxIndex","Math","floor","icon","faAngleLeft","faAngleRight","AnimatePresence","custom","onExitComplete","slice","map","onBoxClicked","style","backgroundImage","release_date","faStar","color","vote_average","vote_count","SingleMovie","poster_path","Home","useQuery","nowPlaying","nowPlayingLoading","topRated","topRatedLoading","upcoming","upcomingLoading","latest","LatestLoading","TvSlider","tvId","name","first_air_date","SliderWrapper","location","useLocation","URLSearchParams","search","searchMovies","movieLoading","searchTvs","tv","tvLoading","SingleTv","TvBanner","popular","popularLoading","airingToday","airingTodayLoading","App","basename","process","Tv","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.62eab8e9.chunk.js","sourcesContent":["import { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n  z-index: 1;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n  cursor: pointer;\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\ninterface IForm {\n  keyword: string;\n}\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tvs\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Link to=\"/\">\n          <Logo\n            variants={logoVariants}\n            whileHover=\"active\"\n            animate=\"normal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1024\"\n            height=\"276.742\"\n            viewBox=\"0 0 1024 276.742\"\n          >\n            <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n          </Logo>\n        </Link>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tvs\">\n              TV Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -210 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"63527560ca78326be8a203622e8cca0c\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\nexport interface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n  vote_average: number;\n  vote_count: number;\n  adult: boolean;\n  release_date: string;\n}\nexport interface ITv {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  overview: string;\n  vote_average: number;\n  vote_count: number;\n  first_air_date: string;\n}\n\nexport interface IGetTvResult {\n  page?: number;\n  results: ITv[];\n  total_pages?: number;\n  total_results?: number;\n}\nexport interface IGetMoviesResult {\n  page?: number;\n  results: IMovie[];\n  total_pages?: number;\n  total_results?: number;\n}\n\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getLatestMovie() {\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTopRatedMovie() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getUpcomingMovie() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getPopularTv() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\nexport function getLatestTv() {\n  return fetch(`${BASE_PATH}/tv/latest?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\nexport function getTopRatedTv() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getAiringTodayTv() {\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function searchMovies(keyword: string | null) {\n  return fetch(\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${keyword}`\n  ).then((response) => response.json());\n}\nexport function searchTvs(keyword: string | null) {\n  return fetch(\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${keyword}`\n  ).then((response) => response.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import styled from \"styled-components\";\nimport { IGetMoviesResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\nconst Title = styled.h2`\n  font-size: 48px;\n  margin-bottom: 20px;\n`;\nconst Overview = styled.p`\n  font-size: 24px;\n  width: 50%;\n`;\ninterface IMovieBanner {\n  data: IGetMoviesResult | undefined;\n  isLoading: boolean | undefined;\n}\nfunction MovieBanner({ data, isLoading }: IMovieBanner) {\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\n            <Title>{data?.results[0].title}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default MovieBanner;\n","import { atom } from \"recoil\";\r\n\r\nexport const sliderNumAtom = atom({\r\n  key: \"sliderNum\",\r\n  default: 0,\r\n});\r\n","import styled from \"styled-components\";\nimport { IGetMoviesResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faStar,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useRecoilState } from \"recoil\";\nimport { sliderNumAtom } from \"../../atom\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n  height: 250px;\n  margin-bottom: 20px;\n  z-index: 0;\n`;\nconst SliderTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  padding: 10px;\n  font-weight: 500;\n`;\nconst SliderHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst SliderBtn = styled.button`\n  width: 30px;\n  height: 30px;\n  font-size: 25px;\n  border-radius: 15px;\n  border-style: none;\n  margin-left: 10px;\n  padding-top: 2px;\n  margin-top: 8px;\n  cursor: pointer;\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)`\n  background-color: white;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst BoxImg = styled(motion.div)<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n    color: white;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  z-index: 2;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 3;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 40%;\n`;\nconst BigInfoBox = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n`;\nconst BigInfoVote = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0px;\n  gap: 10px;\n`;\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  margin-bottom: 50px;\n`;\nconst BigOverview = styled.p`\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.outerWidth - 5 : window.outerWidth + 5,\n  }),\n\n  visible: (back: boolean) => ({\n    x: 0,\n  }),\n  exit: (back: boolean) => ({\n    x: back ? window.outerWidth + 5 : -window.outerWidth - 5,\n  }),\n};\nconst BoxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst InfoVariants = {\n  hover: {\n    opacity: 1,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst offset = 6;\ninterface IMovieSlider {\n  data: IGetMoviesResult;\n  isLoading: boolean;\n  slidertitle: string;\n  sliderString: string;\n}\nfunction MovieSlider({\n  data,\n  isLoading,\n  slidertitle,\n  sliderString,\n}: IMovieSlider) {\n  const history = useHistory();\n  const { scrollY } = useViewportScroll();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const [back, setBack] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [sliderNum, setSliderNum] = useRecoilState(sliderNumAtom);\n  const nextBtnClicked = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = data.results.length - 1; //except banner movie\n      const maxIndex = Math.floor(totalMovies / offset);\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const prevBtnClicked = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(true);\n      toggleLeaving();\n      const totalMovies = data.results.length - 1; //except banner movie\n      const maxIndex = Math.floor(totalMovies / offset);\n      setIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    setSliderNum(+sliderString);\n    if (sliderString === \"21\") {\n      return history.push(`/search`);\n    }\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => {\n    if (sliderString === \"21\") {\n      history.push(`/search`);\n    }\n    history.push(\"/\");\n  };\n  const clickedMoive =\n    bigMovieMatch?.params.movieId &&\n    data?.results.find(\n      (movie) => String(movie.id) === bigMovieMatch.params.movieId\n    );\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderHeader>\n              <SliderTitle>{slidertitle}</SliderTitle>\n              <SliderBtn onClick={prevBtnClicked}>\n                <FontAwesomeIcon icon={faAngleLeft} />\n              </SliderBtn>\n              <SliderBtn onClick={nextBtnClicked}>\n                <FontAwesomeIcon icon={faAngleRight} />\n              </SliderBtn>\n            </SliderHeader>\n            <AnimatePresence\n              initial={false}\n              custom={back}\n              onExitComplete={toggleLeaving}\n            >\n              <Row\n                custom={back}\n                key={index}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={String(movie.id) + sliderString}\n                      onClick={() => onBoxClicked(movie.id)}\n                      key={movie.id}\n                      variants={BoxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                    >\n                      <BoxImg\n                        bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                      />\n                      <Info variants={InfoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {sliderNum === +sliderString && bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId + sliderString}\n                >\n                  {clickedMoive && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMoive.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigInfoBox>\n                        <BigTitle>{clickedMoive.title}</BigTitle>\n                        <h1>Released date : {clickedMoive.release_date}</h1>\n                        <BigInfoVote>\n                          <FontAwesomeIcon\n                            icon={faStar}\n                            style={{ color: \"yellow\" }}\n                          />\n                          <h1>\n                            {clickedMoive.vote_average} (\n                            {clickedMoive.vote_count})\n                          </h1>\n                        </BigInfoVote>\n                        <BigOverview>{clickedMoive.overview}</BigOverview>\n                      </BigInfoBox>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default MovieSlider;\n","import styled from \"styled-components\";\nimport { IMovie } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRecoilState } from \"recoil\";\nimport { sliderNumAtom } from \"../../atom\";\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n  height: 250px;\n  margin-bottom: 20px;\n  z-index: 0;\n`;\nconst SliderTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  padding: 10px;\n  font-weight: 500;\n`;\nconst SliderHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)`\n  background-color: white;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst BoxImg = styled(motion.div)<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n    color: white;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  z-index: 2;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 3;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 40%;\n`;\nconst BigInfoBox = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n`;\nconst BigInfoVote = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0px;\n  gap: 10px;\n`;\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  margin-bottom: 50px;\n`;\nconst BigOverview = styled.p`\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BoxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst InfoVariants = {\n  hover: {\n    opacity: 1,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\ninterface ISingleMovie {\n  data: IMovie;\n  isLoading: boolean;\n  slidertitle: string;\n  sliderString: string;\n}\nfunction SingleMovie({\n  data,\n  isLoading,\n  slidertitle,\n  sliderString,\n}: ISingleMovie) {\n  const history = useHistory();\n  const { scrollY } = useViewportScroll();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [sliderNum, setSliderNum] = useRecoilState(sliderNumAtom);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    setSliderNum(+sliderString);\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const clickedMoive = data;\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderHeader>\n              <SliderTitle>{slidertitle}</SliderTitle>\n            </SliderHeader>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row key={index}>\n                {data ? (\n                  <Box\n                    layoutId={String(data.id) + sliderString}\n                    onClick={() => onBoxClicked(data.id)}\n                    key={data.id}\n                    variants={BoxVariants}\n                    whileHover=\"hover\"\n                    initial=\"normal\"\n                    transition={{ type: \"tween\" }}\n                  >\n                    <BoxImg bgPhoto={makeImagePath(data.poster_path, \"w500\")} />\n                    <Info variants={InfoVariants}>\n                      <h4>{data.title}</h4>\n                    </Info>\n                  </Box>\n                ) : null}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {sliderNum === +sliderString && bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId + sliderString}\n                >\n                  {clickedMoive && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMoive.poster_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigInfoBox>\n                        <BigTitle>{clickedMoive.title}</BigTitle>\n                        <h1>Released Date : {clickedMoive.release_date}</h1>\n                        <BigInfoVote>\n                          <FontAwesomeIcon\n                            icon={faStar}\n                            style={{ color: \"yellow\" }}\n                          />\n                          <h1>\n                            {clickedMoive.vote_average} (\n                            {clickedMoive.vote_count})\n                          </h1>\n                        </BigInfoVote>\n                        <BigOverview>{clickedMoive.overview}</BigOverview>\n                      </BigInfoBox>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default SingleMovie;\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getLatestMovie,\r\n  getMovies,\r\n  getTopRatedMovie,\r\n  getUpcomingMovie,\r\n  IGetMoviesResult,\r\n  IMovie,\r\n} from \"../api\";\r\nimport MovieBanner from \"../Components/Movies/MovieBanner\";\r\nimport MovieSlider from \"../Components/Movies/MovieSlider\";\r\nimport SingleMovie from \"../Components/Movies/SingleMovie\";\r\nfunction Home() {\r\n  const { data: nowPlaying, isLoading: nowPlayingLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n  const { data: topRated, isLoading: topRatedLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"topRated\"], getTopRatedMovie);\r\n  const { data: upcoming, isLoading: upcomingLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"upcoming\"], getUpcomingMovie);\r\n  const { data: latest, isLoading: LatestLoading } = useQuery<IMovie>(\r\n    [\"tv\", \"lateset\"],\r\n    getLatestMovie\r\n  );\r\n  return (\r\n    <>\r\n      {nowPlaying ? (\r\n        <>\r\n          <MovieBanner data={nowPlaying} isLoading={nowPlayingLoading} />\r\n          <MovieSlider\r\n            data={nowPlaying}\r\n            isLoading={nowPlayingLoading}\r\n            sliderString=\"1\"\r\n            slidertitle=\"Now Playing Movies\"\r\n          />\r\n        </>\r\n      ) : null}\r\n      {topRated && (\r\n        <MovieSlider\r\n          data={topRated}\r\n          isLoading={topRatedLoading}\r\n          sliderString=\"2\"\r\n          slidertitle=\"Top Rated Movies\"\r\n        />\r\n      )}\r\n      {upcoming && (\r\n        <MovieSlider\r\n          data={upcoming}\r\n          isLoading={upcomingLoading}\r\n          sliderString=\"3\"\r\n          slidertitle=\"Upcoming Movies\"\r\n        />\r\n      )}\r\n      {latest && (\r\n        <SingleMovie\r\n          data={latest}\r\n          isLoading={LatestLoading}\r\n          sliderString=\"4\"\r\n          slidertitle=\"Latest Movie\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import styled from \"styled-components\";\nimport { IGetTvResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faStar,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useRecoilState } from \"recoil\";\nimport { sliderNumAtom } from \"../../atom\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n  height: 250px;\n  margin-bottom: 20px;\n  z-index: 0;\n`;\nconst SliderTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  padding: 10px;\n  font-weight: 500;\n`;\nconst SliderHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst SliderBtn = styled.button`\n  width: 30px;\n  height: 30px;\n  font-size: 25px;\n  border-radius: 15px;\n  border-style: none;\n  margin-left: 10px;\n  padding-top: 2px;\n  margin-top: 8px;\n  cursor: pointer;\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)`\n  background-color: white;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst BoxImg = styled(motion.div)<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n    color: white;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  z-index: 2;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 3;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 40%;\n`;\nconst BigInfoBox = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n`;\nconst BigInfoVote = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0px;\n  gap: 10px;\n`;\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  margin-bottom: 50px;\n`;\nconst BigOverview = styled.p`\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.outerWidth - 5 : window.outerWidth + 5,\n  }),\n\n  visible: (back: boolean) => ({\n    x: 0,\n  }),\n  exit: (back: boolean) => ({\n    x: back ? window.outerWidth + 5 : -window.outerWidth - 5,\n  }),\n};\nconst BoxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst InfoVariants = {\n  hover: {\n    opacity: 1,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst offset = 6;\ninterface ITvSlider {\n  data: IGetTvResult;\n  isLoading: boolean;\n  slidertitle: string;\n  sliderString: string;\n}\nfunction TvSlider({ data, isLoading, slidertitle, sliderString }: ITvSlider) {\n  const history = useHistory();\n  const { scrollY } = useViewportScroll();\n  const bigMovieMatch = useRouteMatch<{ tvId: string }>(\"/tvs/:tvId\");\n  const [back, setBack] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [sliderNum, setSliderNum] = useRecoilState(sliderNumAtom);\n  const nextBtnClicked = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = data.results.length - 1; //except banner movie\n      const maxIndex = Math.floor(totalMovies / offset);\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const prevBtnClicked = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(true);\n      toggleLeaving();\n      const totalMovies = data.results.length - 1; //except banner movie\n      const maxIndex = Math.floor(totalMovies / offset);\n      setIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    setSliderNum(+sliderString);\n    if (sliderString === \"22\") {\n      return history.push(`/search`);\n    }\n    history.push(`/tvs/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tvs\");\n  const clickedMoive =\n    bigMovieMatch?.params.tvId &&\n    data?.results.find(\n      (movie) => String(movie.id) === bigMovieMatch.params.tvId\n    );\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderHeader>\n              <SliderTitle>{slidertitle}</SliderTitle>\n              <SliderBtn onClick={prevBtnClicked}>\n                <FontAwesomeIcon icon={faAngleLeft} />\n              </SliderBtn>\n              <SliderBtn onClick={nextBtnClicked}>\n                <FontAwesomeIcon icon={faAngleRight} />\n              </SliderBtn>\n            </SliderHeader>\n            <AnimatePresence\n              initial={false}\n              custom={back}\n              onExitComplete={toggleLeaving}\n            >\n              <Row\n                custom={back}\n                key={index}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={String(movie.id) + sliderString}\n                      onClick={() => onBoxClicked(movie.id)}\n                      key={movie.id}\n                      variants={BoxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                    >\n                      <BoxImg\n                        bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                      />\n                      <Info variants={InfoVariants}>\n                        <h4>{movie.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {sliderNum === +sliderString && bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.tvId + sliderString}\n                >\n                  {clickedMoive && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMoive.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigInfoBox>\n                        <BigTitle>{clickedMoive.name}</BigTitle>\n                        <h1>First Air Date : {clickedMoive.first_air_date}</h1>\n                        <BigInfoVote>\n                          <FontAwesomeIcon\n                            icon={faStar}\n                            style={{ color: \"yellow\" }}\n                          />\n                          <h1>\n                            {clickedMoive.vote_average} (\n                            {clickedMoive.vote_count})\n                          </h1>\n                        </BigInfoVote>\n                        <BigOverview>{clickedMoive.overview}</BigOverview>\n                      </BigInfoBox>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default TvSlider;\n","import { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  IGetMoviesResult,\n  IGetTvResult,\n  searchMovies,\n  searchTvs,\n} from \"../api\";\nimport MovieSlider from \"../Components/Movies/MovieSlider\";\nimport TvSlider from \"../Components/Tvs/TvSlider\";\n\nconst Wrapper = styled.div`\n  padding: 50px;\n  margin-top: 100px;\n  width: 100%;\n`;\nconst SliderWrapper = styled.div`\n  margin-top: 50px;\n`;\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n  const { data: movie, isLoading: movieLoading } = useQuery<IGetMoviesResult>(\n    [\"movie\", \"search\"],\n    () => searchMovies(keyword)\n  );\n  const { data: tv, isLoading: tvLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"search\"],\n    () => searchTvs(keyword)\n  );\n  return (\n    <Wrapper>\n      <SliderWrapper>\n        {movie ? (\n          <MovieSlider\n            data={movie}\n            isLoading={movieLoading}\n            sliderString=\"21\"\n            slidertitle=\"Moives\"\n          />\n        ) : null}\n      </SliderWrapper>\n      <SliderWrapper>\n        {tv ? (\n          <TvSlider\n            data={tv}\n            isLoading={tvLoading}\n            sliderString=\"22\"\n            slidertitle=\"Tv Shows\"\n          />\n        ) : null}\n      </SliderWrapper>\n    </Wrapper>\n  );\n}\nexport default Search;\n","import styled from \"styled-components\";\nimport { ITv } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRecoilState } from \"recoil\";\nimport { sliderNumAtom } from \"../../atom\";\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n  height: 250px;\n  margin-bottom: 20px;\n  z-index: 0;\n`;\nconst SliderTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  padding: 10px;\n  font-weight: 500;\n`;\nconst SliderHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst SliderBtn = styled.button`\n  width: 30px;\n  height: 30px;\n  font-size: 25px;\n  border-radius: 15px;\n  border-style: none;\n  margin-left: 10px;\n  padding-top: 2px;\n  margin-top: 8px;\n  cursor: pointer;\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)`\n  background-color: white;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst BoxImg = styled(motion.div)<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n    color: white;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  z-index: 2;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 3;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 40%;\n`;\nconst BigInfoBox = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n`;\nconst BigInfoVote = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0px;\n  gap: 10px;\n`;\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 28px;\n  margin-bottom: 50px;\n`;\nconst BigOverview = styled.p`\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.outerWidth - 5 : window.outerWidth + 5,\n  }),\n\n  visible: (back: boolean) => ({\n    x: 0,\n  }),\n  exit: (back: boolean) => ({\n    x: back ? window.outerWidth + 5 : -window.outerWidth - 5,\n  }),\n};\nconst BoxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\nconst InfoVariants = {\n  hover: {\n    opacity: 1,\n    transition: { delay: 0.5, duration: 0.3, type: \"tween\" },\n  },\n};\ninterface ISingleTv {\n  data: ITv;\n  isLoading: boolean;\n  slidertitle: string;\n  sliderString: string;\n}\nfunction SingleTv({ data, isLoading, slidertitle, sliderString }: ISingleTv) {\n  const history = useHistory();\n  const { scrollY } = useViewportScroll();\n  const bigMovieMatch = useRouteMatch<{ tvId: string }>(\"/tvs/:tvId\");\n  const [back, setBack] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [sliderNum, setSliderNum] = useRecoilState(sliderNumAtom);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    setSliderNum(+sliderString);\n    history.push(`/tvs/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tvs\");\n  const clickedMoive = data;\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderHeader>\n              <SliderTitle>{slidertitle}</SliderTitle>\n            </SliderHeader>\n            <AnimatePresence\n              initial={false}\n              custom={back}\n              onExitComplete={toggleLeaving}\n            >\n              <Row\n                custom={back}\n                key={index}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n              >\n                {data ? (\n                  <Box\n                    layoutId={String(data.id) + sliderString}\n                    onClick={() => onBoxClicked(data.id)}\n                    key={data.id}\n                    variants={BoxVariants}\n                    whileHover=\"hover\"\n                    initial=\"normal\"\n                    transition={{ type: \"tween\" }}\n                  >\n                    <BoxImg bgPhoto={makeImagePath(data.poster_path, \"w500\")} />\n                    <Info variants={InfoVariants}>\n                      <h4>{data.name}</h4>\n                    </Info>\n                  </Box>\n                ) : null}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {sliderNum === +sliderString && bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.tvId + sliderString}\n                >\n                  {clickedMoive && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMoive.poster_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigInfoBox>\n                        <BigTitle>{clickedMoive.name}</BigTitle>\n                        <h1>First Air Date : {clickedMoive.first_air_date}</h1>\n                        <BigInfoVote>\n                          <FontAwesomeIcon\n                            icon={faStar}\n                            style={{ color: \"yellow\" }}\n                          />\n                          <h1>\n                            {clickedMoive.vote_average} (\n                            {clickedMoive.vote_count})\n                          </h1>\n                        </BigInfoVote>\n                        <BigOverview>{clickedMoive.overview}</BigOverview>\n                      </BigInfoBox>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default SingleTv;\n","import styled from \"styled-components\";\nimport { IGetTvResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n  z-index: -1;\n`;\nconst Loader = styled.div`\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\nconst Title = styled.h2`\n  font-size: 48px;\n  margin-bottom: 20px;\n`;\nconst Overview = styled.p`\n  font-size: 24px;\n  width: 50%;\n`;\ninterface ITvBanner {\n  data: IGetTvResult | undefined;\n  isLoading: boolean | undefined;\n}\nfunction TvBanner({ data, isLoading }: ITvBanner) {\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\n            <Title>{data?.results[0].name}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default TvBanner;\n","import { useQuery } from \"react-query\";\nimport {\n  getAiringTodayTv,\n  getLatestTv,\n  getPopularTv,\n  getTopRatedTv,\n  IGetTvResult,\n  ITv,\n} from \"../api\";\nimport SingleTv from \"../Components/Tvs/SingleTv\";\nimport TvBanner from \"../Components/Tvs/TvBanner\";\nimport TvSlider from \"../Components/Tvs/TvSlider\";\nfunction Home() {\n  const { data: popular, isLoading: popularLoading } = useQuery<IGetTvResult>(\n    [\"tvs\", \"popular\"],\n    getPopularTv\n  );\n  const { data: airingToday, isLoading: airingTodayLoading } =\n    useQuery<IGetTvResult>([\"tvs\", \"airingToday\"], getAiringTodayTv);\n  const { data: topRated, isLoading: topRatedLoading } = useQuery<IGetTvResult>(\n    [\"tvs\", \"TopRated\"],\n    getTopRatedTv\n  );\n  const { data: latest, isLoading: LatestLoading } = useQuery<ITv>(\n    [\"tv\", \"lateset\"],\n    getLatestTv\n  );\n  return (\n    <>\n      {popular ? (\n        <>\n          <TvBanner data={popular} isLoading={popularLoading} />\n          <TvSlider\n            data={popular}\n            isLoading={popularLoading}\n            sliderString=\"11\"\n            slidertitle=\"Popular TVs\"\n          />\n        </>\n      ) : null}\n      {airingToday && (\n        <TvSlider\n          data={airingToday}\n          isLoading={airingTodayLoading}\n          sliderString=\"12\"\n          slidertitle=\"Airing Today TVs\"\n        />\n      )}\n      {topRated && (\n        <TvSlider\n          data={topRated}\n          isLoading={topRatedLoading}\n          sliderString=\"13\"\n          slidertitle=\"Top Rated TVs\"\n        />\n      )}\n      {latest && (\n        <SingleTv\n          data={latest}\n          isLoading={LatestLoading}\n          sliderString=\"14\"\n          slidertitle=\"Latest TV\"\n        />\n      )}\n    </>\n  );\n}\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Switch>\n        <Route path={[\"/tvs\", \"/tvs/:tvId\"]}>\n          <Tv />\n        </Route>\n        <Route path={\"/search\"}>\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst client = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}